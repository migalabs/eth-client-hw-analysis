version: '3.7'

services:

# -----------------------------------------------------------------------------
# ______                     _   _               _   _           _           
# |  ____|                   | | (_)             | \ | |         | |          
# | |__  __  _____  ___ _   _| |_ _  ___  _ __   |  \| | ___   __| | ___  ___ 
# |  __| \ \/ / _ \/ __| | | | __| |/ _ \| '_ \  | . ` |/ _ \ / _` |/ _ \/ __|
# | |____ >  <  __/ (__| |_| | |_| | (_) | | | | | |\  | (_) | (_| |  __/\__ \
# |______/_/\_\___|\___|\__,_|\__|_|\___/|_| |_| |_| \_|\___/ \__,_|\___||___/
#                                                                            
# -----------------------------------------------------------------------------                                                                        

  nethermind:
    image: nethermind/nethermind:${NETHERMIND_TAG:-latest}
    restart: unless-stopped
    init: true
    networks: [ cluster ]
    command: >-
      --config=${NETWORK}
      --JsonRpc.Port=8545
      --JsonRpc.Host=0.0.0.0
      --JsonRpc.EnginePort=8551
      --JsonRpc.EngineHost=0.0.0.0
      --JsonRpc.JwtSecretFile="/tmp/ethereum/jwtsecret"
      --JsonRpc.Enabled=true
      --HealthChecks.Enabled=true 
      --HealthChecks.UIEnabled=true
      --Metrics.Enabled=true
      --Metrics.ExposePort=8645
    ports:
      - "127.0.0.1:8545:8545"    # JSON-RPC port
      - "127.0.0.1:8645:8645"    # Prometheus metrics port
      - "30303:30303"  # P2P port 
    environment:
      - NETHERMIND_NETWORKCONFIG_DISCOVERYPORT=30303
      - NETHERMIND_NETWORKCONFIG_P2PPORT=30303
    volumes:
      - ${DATA_FOLDER:-./apps-data}/.nethermind/nethermind_db:/nethermind/nethermind_db
      - ${DATA_FOLDER:-./apps-data}/.nethermind/logs:/nethermind/logs
      - ${DATA_FOLDER:-./apps-data}/.nethermind/keystore:/nethermind/keystore
      - ./data:/tmp/ethereum

# -----------------------------------------------------------------------------
#   _____                                           _   _           _           
#  / ____|                                         | \ | |         | |          
# | |     ___  _ __  ___  ___ _ __  ___ _   _ ___  |  \| | ___   __| | ___  ___ 
# | |    / _ \| '_ \/ __|/ _ \ '_ \/ __| | | / __| | . ` |/ _ \ / _` |/ _ \/ __|
# | |___| (_) | | | \__ \  __/ | | \__ \ |_| \__ \ | |\  | (_) | (_| |  __/\__ \
#  \_____\___/|_| |_|___/\___|_| |_|___/\__,_|___/ |_| \_|\___/ \__,_|\___||___/
#                                                                               
# -----------------------------------------------------------------------------



  lighthouse:
    image: sigp/lighthouse:${LIGHTHOUSE_TAG:-latest}
    restart: unless-stopped
    init: true
    networks: [ cluster ]
    ports:
      - "127.0.0.1:5054:5054" # Prometheus metrics
      - "127.0.0.1:5052:5052" # Rest API port
      - "9000:9000" # P2P port
      - "9001:9001" # QUIC port
    command: >-
      lighthouse
      --network=${NETWORK}
      --datadir=/lighthousedb
      --debug-level=info
      --logfile-debug-level=info
      --logfile=/lighthousedb/lighthouse.log
      beacon_node
      --checkpoint-sync-url=${CHECKPOINT_SYNC_URL:-}
      --http
      --metrics
      --metrics-address=0.0.0.0
      --http-address=0.0.0.0
      --execution-endpoints=http://nethermind:8551
      --jwt-secrets=/tmp/ethereum/jwtsecret

    volumes:
      - ${DATA_FOLDER:-./apps-data}/.lighthouse:/lighthousedb
      - ./data:/tmp/ethereum

  prysm:
    image: gcr.io/prysmaticlabs/prysm/beacon-chain:${PRYSM_TAG:-latest}
    restart: unless-stopped
    init: true
    networks: [ cluster ]
    ports:
      - "127.0.0.1:8080:8080" # Prometheus metrics
      - "127.0.0.1:3500:3500" # Rest API port
      - "13000:13000" # P2P TCP port
      - "12000:12000" # P2P UDP port
    command: >-
      --accept-terms-of-use
      --datadir=/prysmdb
      --${NETWORK}
      --checkpoint-sync-url=${CHECKPOINT_SYNC_URL:-}
      --execution-endpoint=http://nethermind:8551
      --monitoring-host=0.0.0.0
      --rpc-host=0.0.0.0
      --jwt-secret=/tmp/ethereum/jwtsecret
      --log-file=/prysmdb/prysm.log
    volumes:
      - ${DATA_FOLDER:-./apps-data}/.prysm:/prysmdb
      - ./data:/tmp/ethereum
  
  teku:
    image: consensys/teku:${TEKU_TAG:-latest}
    restart: unless-stopped
    init: true
    networks: [ cluster ]
    user: ${UID}:${GID}
    ports:
      - "127.0.0.1:8008:8008" # Prometheus metrics
      - "127.0.0.1:5051:5051" # Rest port
      - "9000:9000" # P2P port
    environment:
      - JAVA_OPTS=-Xmx5g
    command: >-
      --data-base-path=/tekudb
      --network=${NETWORK}
      --checkpoint-sync-url=${CHECKPOINT_SYNC_URL:-}
      --ee-endpoint=http://nethermind:8551
      --ee-jwt-secret-file=/tmp/ethereum/jwtsecret
      --metrics-enabled=true
      --metrics-interface=0.0.0.0
      --rest-api-enabled=true
      --rest-api-interface=0.0.0.0
      --rest-api-host-allowlist=*
      --beacon-liveness-tracking-enabled=true

    volumes:
      - ${DATA_FOLDER:-./apps-data}/.teku:/tekudb
      - ./data:/tmp/ethereum
  
  nimbus-trusted-sync:
    image: statusim/nimbus-eth2:${NIMBUS_TAG:-latest}
    restart: unless-stopped
    init: true
    user: ${UID}:${GID}
    networks: [ cluster ]
    command: >-
      --network=${NETWORK}
      trustedNodeSync
      --trusted-node-url="${CHECKPOINT_SYNC_URL:-}"
      --data-dir=/nimbusdb
    volumes:
      - ${DATA_FOLDER:-./apps-data}/.nimbus:/nimbusdb
      - ./data:/tmp/ethereum

  nimbus:
    image: statusim/nimbus-eth2:${NIMBUS_TAG:-latest}
    restart: unless-stopped
    init: true
    user: ${UID}:${GID}
    networks: [ cluster ]
    ports:
      - "127.0.0.1:8008:8008" # Prometheus metrics
      - "127.0.0.1:5052:5052" # Rest Port
      - "9000:9000" # P2P port
    command: >-
      --data-dir=/nimbusdb
      --network=${NETWORK}
      --web3-url=http://nethermind:8551
      --rest
      --metrics
      --jwt-secret=/tmp/ethereum/jwtsecret
      --log-file=/nimbusdb/nimbus.log
      --metrics-address=0.0.0.0

    volumes:
      - ${DATA_FOLDER:-./apps-data}/.nimbus:/nimbusdb
      - ./data:/tmp/ethereum
  
  lodestar:
    image: chainsafe/lodestar:${LODESTAR_TAG}
    restart: unless-stopped
    init: true
    networks: [ cluster ]
    ports:
      - "127.0.0.1:8008:8008" # Prometheus metrics
      - "127.0.0.1:9596:9596" # Rest port
      - "9000:9000" # P2P port
    command: >-
      beacon
      --dataDir=/lodestardb
      --network=${NETWORK}
      --checkpointSyncUrl=${CHECKPOINT_SYNC_URL}
      --execution.urls="http://nethermind:8551"
      --jwt-secret="/tmp/ethereum/jwtsecret"
      --logFile=/lodestardb/lodestar.log
      --metrics=true
      --metrics.address=0.0.0.0
      --listenAddress=0.0.0.0
      --rest.address=0.0.0.0
      

    volumes:
      - ${DATA_FOLDER:-./apps-data}/.lodestar:/lodestardb
      - ./data:/tmp/ethereum

# -----------------------------------------------------------------------------
#  __  __             _ _             _             
# |  \/  |           (_) |           (_)            
# | \  / | ___  _ __  _| |_ ___  _ __ _ _ __   __ _ 
# | |\/| |/ _ \| '_ \| | __/ _ \| '__| | '_ \ / _` |
# | |  | | (_) | | | | | || (_) | |  | | | | | (_| |
# |_|  |_|\___/|_| |_|_|\__\___/|_|  |_|_| |_|\__, |
#                                              __/ |
#                                             |___/ 
# -----------------------------------------------------------------------------

  node-exporter:
    image: prom/node-exporter:v1.7.0
    network_mode: host # Otherwise the tool cannot measure network bandwidth
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    command: >-
      --path.rootfs=/host
      --web.listen-address=localhost:9100
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    networks: [ cluster ]
    ports:
      - "127.0.0.1:8090:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  prometheus:
    image: prom/prometheus:v2.49.1
    init: true
    user: ${UID}:${GID}
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.listen-address=${PROMETHEUS_ADDRESS:-localhost:9090}'
      - '--storage.tsdb.retention.time=1y'
      - '--web.enable-remote-write-receiver'
    network_mode: 'host'
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ${DATA_FOLDER:-./apps-data}/.prometheus:/prometheus/data
  
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics:v1.95.1
    ports:
      - "127.0.0.1:${VICTORIA_PORT:-8428}:8428"
    networks:
      - cluster
    restart: always
    command:
      - "--storageDataPath=/storage"
      - "--httpListenAddr=0.0.0.0:8428"
      - "--http.pathPrefix=/victoria"
      - "--search.maxPointsPerTimeseries=100000"
    
    volumes:
      - ${DATA_FOLDER:-./apps-data}/.victoria:/storage

  grafana:
    image: grafana/grafana:10.3.1-ubuntu
    init: true
    network_mode: 'host'
    volumes:
      - ./apps-data/grafana:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
  
  caddy:
    image: caddy:2.7.5
    restart: unless-stopped
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./site:/srv
      - ./caddy_data:/data
      - ./caddy_config:/config
    network_mode: 'host'

networks:
  cluster: